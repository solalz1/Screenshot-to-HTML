repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-ast
      - id: debug-statements

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: pytest-all
        name: run tests with coverage
        entry: bash
        language: system
        types: [python]
        args: [-c, 'pytest tests/ -v --tb=short --cov=app --cov-report=term-missing --cov-fail-under=70 && echo "Tests and coverage check passed"']
        pass_filenames: false
        always_run: true

# Global excludes for directories we don't want to check
exclude: '^(venv/.*|\.venv/.*|node_modules/.*|\.git/.*|__pycache__/.*|\.pytest_cache/.*)'

# Configuration for pre-commit.ci
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false